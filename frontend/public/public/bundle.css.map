{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../Button.svelte",
    "../Ripple.svelte",
    "../Code.svelte",
    "../Switch.svelte",
    "../Toggler.svelte"
  ],
  "sourcesContent": [
    "<script>import useStyles from './Button.styles';\nimport { get_current_component } from 'svelte/internal';\nimport { createEventForwarder, useActions } from '../../internal';\nimport { ButtonErrors } from './Button.errors';\nimport Error from '../../internal/errors/Error.svelte';\nimport Loader from '../Loader/Loader.svelte';\nimport Ripple from './Ripple.svelte';\nexport let use = [], element = undefined, className = '', override = {}, variant = 'filled', color = 'blue', size = 'sm', radius = 'sm', gradient = { from: 'indigo', to: 'cyan', deg: 45 }, loaderPosition = 'left', loaderProps = {\n    size: 'xs',\n    color: 'white',\n    variant: 'circle'\n}, href = null, external = false, disabled = false, compact = false, loading = false, uppercase = false, fullSize = false, ripple = false;\nexport { className as class };\n/** An action that forwards inner dom node events from parent component */\nconst forwardEvents = createEventForwarder(get_current_component());\n// --------------Error Handling-------------------\nlet observable = false;\nlet err;\nif (disabled && loading) {\n    observable = true;\n    err = ButtonErrors[0];\n}\nif ((external && typeof href !== 'string') || href?.length < 1) {\n    observable = true;\n    err = ButtonErrors[1];\n}\n$: if (observable)\n    override = { display: 'none' };\n// --------------Error Handling-------------------\n$: ({ cx, classes, getStyles } = useStyles({\n    color,\n    compact,\n    fullSize,\n    gradient,\n    radius,\n    size,\n    variant\n}, { name: 'Button' }));\n</script>\n\n<Error {observable} component=\"Button\" code={err} />\n\n<!--\n@component\nA user can perform an immediate action by pressing a button. It's frequently used to start an action, but it can also be used to link to other pages.\n\n@see https://svelteui.dev/core/button\n@example\n    ```tsx\n    <Button>Click</Button> // standard button\n    <Button variant='gradient' gradient={{from: 'blue', to: 'red', deg: 45}}>Click Me</Button> // gradient button\n    ```\n-->\n\n{#if href}\n\t<a\n\t\t{href}\n\t\tbind:this={element}\n\t\tuse:useActions={use}\n\t\tuse:forwardEvents\n\t\tclass:compact\n\t\tclass:uppercase\n\t\tclass={cx(className, classes.root, getStyles({ css: override, variation: variant, disabled }), {\n\t\t\t[classes.disabled]: disabled,\n\t\t\t[classes.loading]: loading\n\t\t})}\n\t\trole=\"button\"\n\t\trel=\"noreferrer noopener\"\n\t\ttarget={external ? '_blank' : ''}\n\t\t{...$$restProps}\n\t\ttabindex=\"0\"\n\t>\n\t\t{#if loading && loaderPosition === 'left'}\n\t\t\t<span class=\"left-section\">\n\t\t\t\t<Loader variant={loaderProps.variant} size={loaderProps.size} color={loaderProps.color} />\n\t\t\t</span>\n\t\t{:else if $$slots.leftIcon}\n\t\t\t<span class=\"left-section\">\n\t\t\t\t<slot name=\"leftIcon\">X</slot>\n\t\t\t</span>\n\t\t{/if}\n\t\t<slot>Button</slot>\n\t\t{#if ripple}\n\t\t\t<Ripple center={false} circle={false} />\n\t\t{/if}\n\t\t{#if loading && loaderPosition === 'right'}\n\t\t\t<span class=\"right-section\">\n\t\t\t\t<Loader variant={loaderProps.variant} size={loaderProps.size} color={loaderProps.color} />\n\t\t\t</span>\n\t\t{:else if $$slots.rightIcon}\n\t\t\t<span class=\"right-section\">\n\t\t\t\t<slot name=\"rightIcon\">X</slot>\n\t\t\t</span>\n\t\t{/if}\n\t</a>\n{:else}\n\t<button\n\t\tbind:this={element}\n\t\tuse:useActions={use}\n\t\tuse:forwardEvents\n\t\tclass={cx(className, classes.root, getStyles({ css: override, variation: variant }), {\n\t\t\t[classes.disabled]: disabled,\n\t\t\t[classes.loading]: loading\n\t\t})}\n\t\tclass:compact\n\t\tclass:uppercase\n\t\t{disabled}\n\t\t{...$$restProps}\n\t\ttabindex=\"0\"\n\t>\n\t\t{#if loading && loaderPosition === 'left'}\n\t\t\t<span class=\"left-section\">\n\t\t\t\t<Loader variant={loaderProps.variant} size={loaderProps.size} color={loaderProps.color} />\n\t\t\t</span>\n\t\t{:else if $$slots.leftIcon}\n\t\t\t<span class=\"left-section\">\n\t\t\t\t<slot name=\"leftIcon\">X</slot>\n\t\t\t</span>\n\t\t{/if}\n\t\t<slot>Button</slot>\n\t\t{#if ripple}\n\t\t\t<Ripple center={false} circle={false} />\n\t\t{/if}\n\t\t{#if loading && loaderPosition === 'right'}\n\t\t\t<span class=\"right-section\">\n\t\t\t\t<Loader variant={loaderProps.variant} size={loaderProps.size} color={loaderProps.color} />\n\t\t\t</span>\n\t\t{:else if $$slots.rightIcon}\n\t\t\t<span class=\"right-section\">\n\t\t\t\t<slot name=\"rightIcon\">X</slot>\n\t\t\t</span>\n\t\t{/if}\n\t</button>\n{/if}\n\n<style>\n\t.uppercase {\n\t\ttext-transform: uppercase;\n\t}\n\t.left-section {\n\t\tmargin-right: 10px;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n\t.right-section {\n\t\tmargin-left: 10px;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n</style>\n",
    "<script context=\"module\">\n\tfunction isTouchEvent(e) {\n\t\treturn e.constructor.name === 'TouchEvent';\n\t}\n\tfunction transform(el, value) {\n\t\tel.style['transform'] = value;\n\t\tel.style['webkitTransform'] = value;\n\t}\n\tfunction opacity(el, value) {\n\t\tel.style['opacity'] = value.toString();\n\t}\n\tconst calculate = (e, el) => {\n\t\tconst offset = el.getBoundingClientRect();\n\t\tconst target = isTouchEvent(e) ? e.touches[e.touches.length - 1] : e;\n\t\tconst localX = target.clientX - offset.left;\n\t\tconst localY = target.clientY - offset.top;\n\t\tlet radius = 0;\n\t\tlet scale = 0.3;\n\t\t// Get ripple position\n\t\tconst center = el.dataset.center;\n\t\tconst circle = el.dataset.circle;\n\t\tif (circle) {\n\t\t\tscale = 0.15;\n\t\t\tradius = el.clientWidth / 2;\n\t\t\tradius = center\n\t\t\t\t? radius\n\t\t\t\t: radius + Math.sqrt((localX - radius) ** 2 + (localY - radius) ** 2) / 4;\n\t\t} else {\n\t\t\tradius = Math.sqrt(el.clientWidth ** 2 + el.clientHeight ** 2) / 2;\n\t\t}\n\t\tconst centerX = `${(el.clientWidth - radius * 2) / 2}px`;\n\t\tconst centerY = `${(el.clientHeight - radius * 2) / 2}px`;\n\t\tconst x = center ? centerX : `${localX - radius}px`;\n\t\tconst y = center ? centerY : `${localY - radius}px`;\n\t\treturn { radius, scale, x, y, centerX, centerY };\n\t};\n\tconst startRipple = function (eventType, event) {\n\t\tconst hideEvents = ['touchcancel', 'mouseleave', 'dragstart'];\n\t\tlet container = event.currentTarget || event.target;\n\t\tif (container && !container.classList.contains('ripple')) {\n\t\t\tcontainer = container.querySelector('.ripple');\n\t\t}\n\t\tif (!container) {\n\t\t\treturn;\n\t\t}\n\t\tconst prev = container.dataset.event;\n\t\tif (prev && prev !== eventType) {\n\t\t\treturn;\n\t\t}\n\t\tcontainer.dataset.event = eventType;\n\t\t// Create the ripple\n\t\tconst wave = document.createElement('span');\n\t\tconst { radius, scale, x, y, centerX, centerY } = calculate(event, container);\n\t\tconst color = container.dataset.color;\n\t\tconst size = `${radius * 2}px`;\n\t\twave.className = 'animation';\n\t\twave.style.width = size;\n\t\twave.style.height = size;\n\t\twave.style.background = color;\n\t\twave.classList.add('animation-enter');\n\t\twave.classList.add('animation--visible');\n\t\ttransform(wave, `translate(${x}, ${y}) scale3d(${scale},${scale},${scale})`);\n\t\topacity(wave, 0);\n\t\twave.dataset.activated = String(performance.now());\n\t\tcontainer.appendChild(wave);\n\t\tsetTimeout(() => {\n\t\t\twave.classList.remove('animation-enter');\n\t\t\twave.classList.add('animation-in');\n\t\t\ttransform(wave, `translate(${centerX}, ${centerY}) scale3d(1,1,1)`);\n\t\t\topacity(wave, 0.25);\n\t\t}, 0);\n\t\tconst releaseEvent = eventType === 'mousedown' ? 'mouseup' : 'touchend';\n\t\tconst onRelease = function () {\n\t\t\tdocument.removeEventListener(releaseEvent, onRelease);\n\t\t\thideEvents.forEach((name) => {\n\t\t\t\tdocument.removeEventListener(name, onRelease);\n\t\t\t});\n\t\t\tconst diff = performance.now() - Number(wave.dataset.activated);\n\t\t\tconst delay = Math.max(250 - diff, 0);\n\t\t\tsetTimeout(() => {\n\t\t\t\twave.classList.remove('animation-in');\n\t\t\t\twave.classList.add('animation-out');\n\t\t\t\topacity(wave, 0);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\twave && container.removeChild(wave);\n\t\t\t\t\tif (container.children.length === 0) {\n\t\t\t\t\t\tdelete container.dataset.event;\n\t\t\t\t\t}\n\t\t\t\t}, 300);\n\t\t\t}, delay);\n\t\t};\n\t\tdocument.addEventListener(releaseEvent, onRelease);\n\t\thideEvents.forEach((name) => {\n\t\t\tdocument.addEventListener(name, onRelease, { passive: true });\n\t\t});\n\t};\n\tconst onMouseDown = function (e) {\n\t\t// Trigger on left click only\n\t\tif (e.button === 0) {\n\t\t\tstartRipple(e.type, e);\n\t\t}\n\t};\n\tconst onTouchStart = function (e) {\n\t\tif (e.changedTouches) {\n\t\t\tfor (let i = 0; i < e.changedTouches.length; ++i) {\n\t\t\t\tstartRipple(e.type, e.changedTouches[i]);\n\t\t\t}\n\t\t}\n\t};\n</script>\n\n<script>\n\texport let center = false;\n\texport let circle = false;\n\texport let color = 'currentColor';\n\timport { tick, onMount, onDestroy } from 'svelte';\n\tlet el;\n\tlet trigEl;\n\tonMount(async () => {\n\t\tawait tick();\n\t\ttry {\n\t\t\tif (center) {\n\t\t\t\tel.dataset.center = 'true';\n\t\t\t}\n\t\t\tif (circle) {\n\t\t\t\tel.dataset.circle = 'true';\n\t\t\t}\n\t\t\tel.dataset.color = color;\n\t\t\ttrigEl = el.parentElement;\n\t\t} catch (err) {} // eslint-disable-line\n\t\tif (!trigEl) {\n\t\t\tconsole.error('Ripple: Trigger element not found.');\n\t\t\treturn;\n\t\t}\n\t\tlet style = window.getComputedStyle(trigEl);\n\t\tif (style.position.length === 0 || style.position === 'static') {\n\t\t\ttrigEl.style.position = 'relative';\n\t\t}\n\t\ttrigEl.addEventListener('touchstart', onTouchStart, { passive: true });\n\t\ttrigEl.addEventListener('mousedown', onMouseDown, { passive: true });\n\t});\n\tonDestroy(() => {\n\t\tif (!trigEl) {\n\t\t\treturn;\n\t\t}\n\t\ttrigEl.removeEventListener('mousedown', onMouseDown);\n\t\ttrigEl.removeEventListener('touchstart', onTouchStart);\n\t});\n</script>\n\n<div class=\"ripple\" bind:this={el} />\n\n<style>\n\t.ripple {\n\t\tdisplay: block;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\toverflow: hidden;\n\t\tborder-radius: inherit;\n\t\tcolor: inherit;\n\t\tpointer-events: none;\n\t\tz-index: 0;\n\t\tcontain: strict;\n\t}\n\t.ripple :global(.animation) {\n\t\tcolor: inherit;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tborder-radius: 50%;\n\t\topacity: 0;\n\t\tpointer-events: none;\n\t\toverflow: hidden;\n\t\twill-change: transform, opacity;\n\t}\n\t.ripple :global(.animation-enter) {\n\t\ttransition: none;\n\t}\n\t.ripple :global(.animation-in) {\n\t\ttransition: opacity 0.1s cubic-bezier(0.4, 0, 0.2, 1);\n\t\ttransition: transform 0.25s cubic-bezier(0.4, 0, 0.2, 1),\n\t\t\topacity 0.1s cubic-bezier(0.4, 0, 0.2, 1);\n\t}\n\t.ripple :global(.animation-out) {\n\t\ttransition: opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n\t}\n</style>\n",
    "<script>import { get_current_component } from 'svelte/internal';\nimport { clipboard, useActions, createEventForwarder } from '../../internal';\nimport Error from '../../internal/errors/Error.svelte';\nimport useStyles from './Code.styles';\nimport CopyIcon from './CopyIcon.svelte';\nimport { CodeErrors } from './Code.errors';\nexport let use = [], element = undefined, className = '', override = {}, color = 'gray', block = false, width = 100, copy = false, message = 'Copied', noMono = false;\nexport { className as class };\n/** An action that forwards inner dom node events from parent component */\nconst forwardEvents = createEventForwarder(get_current_component());\n/** Copy logic */\nlet copied = false;\nfunction toggle() {\n    // sets the copied state for icon\n    copied = true;\n    setTimeout(() => (copied = false), 3000);\n}\n// --------------Error Handling-------------------\nlet observable = false;\nlet err;\nif (!block && width < 100) {\n    observable = true;\n    err = CodeErrors[0];\n}\nif (copy && message === 'Copied') {\n    observable = true;\n    err = CodeErrors[1];\n}\nif (copy && !block) {\n    observable = true;\n    err = CodeErrors[2];\n}\n$: if (observable)\n    override = { display: 'none' };\n// --------------Error Handling-------------------\n$: ({ cx, classes, getStyles } = useStyles({ color, block, noMono, width }, { name: 'Code' }));\n</script>\n\n<Error {observable} component=\"Code\" code={err} />\n\n<!--\n@component\nInline or block code without syntax highlighting\n\n@see https://svelteui.dev/core/code\n@example\n    ```tsx\n    <Code color='green' size='lg' variant='bars' /> // standard code component\n    <Code color='blue' block copy message={codeToCopy} /> // code with block and copy props\n    ```\n-->\n\n{#if block}\n\t<pre\n\t\tbind:this={element}\n\t\tuse:useActions={use}\n\t\tuse:forwardEvents\n\t\tclass={cx(className, classes.root, getStyles({ css: override }))}\n\t\t{...$$restProps}>\n\t\t{#if !noMono}\n\t\t\t<code class={className}><slot>Write some code</slot></code>\n\t\t{:else}\n\t\t\t<p class={className}><slot>Write some code</slot></p>\n\t\t{/if}\n      {#if copy}\n\t\t\t<button on:click={toggle} use:clipboard={message} class={classes.copy}\n\t\t\t\t><CopyIcon {copied} /></button\n\t\t\t>\n\t\t{/if}\n    </pre>\n{:else}\n\t<code\n\t\tbind:this={element}\n\t\tuse:useActions={use}\n\t\tuse:forwardEvents\n\t\tclass={cx(className, classes.root, getStyles({ css: override }))}\n\t\t{...$$restProps}\n\t>\n\t\t<slot>Write some code</slot>\n\t</code>\n{/if}\n\n<style>\n\tbutton {\n\t\tborder: 0;\n\t\tpadding: 0;\n\t\tbackground: none;\n\t\tcursor: pointer;\n\t}\n</style>\n",
    "<script>import { get_current_component } from 'svelte/internal';\nimport { createEventForwarder, useActions } from '../../internal';\nimport { randomID } from '../../styles';\nimport useStyles from './Switch.styles';\nexport let use = [], element = undefined, className = '', override = {}, color = 'blue', size = 'sm', radius = 'xl', insideLabelSize = undefined, transitionFunction = 'linear', id = randomID(), label = '', onLabel = '', offLabel = '', disabled = false, checked = false;\nexport { className as class };\n/** An action that forwards inner dom node events from parent component */\nconst forwardEvents = createEventForwarder(get_current_component());\n$: ({ cx, classes, getStyles } = useStyles({\n    color,\n    offLabel,\n    onLabel,\n    insideLabelSize,\n    radius,\n    size,\n    transitionFunction\n}, { name: 'Switch' }));\n</script>\n\n<!--\n@component\n\nA user can use this component to enable/disable something, normally used for boolean values or for binary actions.\n\n@see https://svelteui.dev/core/switch\n@example\n    ```tsx\n    <Switch/> // standard switch\n    <Switch label=\"Lights\" onLabel=\"ON\" offLabel=\"OFF\"/> // switch with labels\n    ```\n-->\n<div class={cx(className, classes.root)}>\n\t<input\n\t\tbind:this={element}\n\t\t{id}\n\t\t{disabled}\n\t\tuse:useActions={use}\n\t\tuse:forwardEvents\n\t\tbind:checked\n\t\ttype=\"checkbox\"\n\t\tclass={cx(className, classes.input, getStyles({ css: override }))}\n\t\tclass:disabled\n\t/>\n\t{#if label}\n\t\t<label for={id} class={classes.label}>\n\t\t\t{label}\n\t\t</label>\n\t{/if}\n</div>\n\n<style>\n\t.switch {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\talign-items: center;\n\t}\n\t.label {\n\t\tpadding-left: 10px;\n\t}\n</style>\n",
    "<script>\n    let checked = false;\n    export let title;\n    export let callback;\n</script>\n\n<p>{title}</p>\n<label class=\"switch\">\n    <input type=\"checkbox\" bind:checked={checked} onclick={callback(checked)} />\n    <span class=\"slider\"></span>\n</label>\n\n\n<style>\n    .switch {\n        position: relative;\n        display: inline-block;\n        width: 50px;\n        height: 25px;\n    }\n\n    .switch input {\n        opacity: 0;\n        width: 0;\n        height: 0;\n    }\n\n    .slider {\n        position: absolute;\n        cursor: pointer;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: #ccc;\n        transition: 0.4s;\n        border-radius: 50px;\n    }\n\n    .slider:before {\n        position: absolute;\n        content: \"\";\n        height: 17px;\n        width: 17px;\n        border-radius: 50px;\n        left: 4px;\n        bottom: 4px;\n        background-color: white;\n        transition: 0.4s;\n    }\n\n    input:checked + .slider {\n        background-color: #4caf50;\n    }\n\n    input:checked + .slider:before {\n        transform: translateX(26px);\n    }\n</style>\n"
  ],
  "names": [],
  "mappings": "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"
}